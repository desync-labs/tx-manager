name: Fathom Transaction Manager Build and Deployment

on:
  workflow_dispatch:
  pull_request:
    types:
      - closed
    branches:
      - dev
      - master
jobs:
  #Build the images and push to dockerhub
  #The job condition says “Run this for everything EXCEPT non-merged closed PRs”.
  build:
    if: (!(github.event.action == 'closed' && github.event.pull_request.merged != true))

    name: Build & Push To Dockerhub

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get all changed build files
        id: changed-build-files
        uses: tj-actions/changed-files@v44
        with:
          # Avoid using single or double quotes for multiline patterns
          files: |
            **.sh
  
      - name: List all changed build files
        if: steps.changed-build-files.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-build-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done          

      # - name: Set Version Suffix
      #   id: set-suffix
      #   run: echo "SUFFIX=$(if [ '${{ github.ref }}' == 'refs/heads/fathom-utils-package-migrate' ]; then echo 'dev'; fi)" >> $GITHUB_ENV
      #   #run: echo "SUFFIX=$(if [ '${{ github.ref }}' == 'refs/heads/dev' ]; then echo 'dev'; fi)" >> $GITHUB_ENV

      #======================================================================================================
      #                                      Submitter Build
      #======================================================================================================    
      - name: Build Submitter Image
        if: steps.changed-build-files.outputs.any_changed == 'true' && contains(steps.changed-build-files.outputs.all_changed_files, 'build-scripts/build-submitter.sh')
        run: |
          cd tx-manager/build-scripts
          ./build-submitter.sh
        env:
          GITHUB_ENV: $GITHUB_ENV         

      - name: Push Submitter Image to DockerHub
        if: steps.changed-build-files.outputs.any_changed == 'true' && contains(steps.changed-build-files.outputs.all_changed_files, 'build-scripts/build-submitter.sh')
        run: |
          echo "Pushing SUBMITTER_VERSION :${{ env.SUBMITTER_VERSION }}"
          docker push ${{ env.ORG_NAME }}/${{ env.SUBMITTER_NAME }}:${{ env.SUBMITTER_VERSION }}
        env:
          GITHUB_ENV: $GITHUB_ENV         
      
      #======================================================================================================
      #                                      Scheduler Build
      #======================================================================================================    
      - name: Build Scheduler Image
        if: steps.changed-build-files.outputs.any_changed == 'true' && contains(steps.changed-build-files.outputs.all_changed_files, 'build-scripts/build-scheduler.sh')
        run: |
          cd tx-manager/build-scripts
          ./build-scheduler.sh
        env:
          GITHUB_ENV: $GITHUB_ENV         

      - name: Push Scheduler Image to DockerHub
        if: steps.changed-build-files.outputs.any_changed == 'true' && contains(steps.changed-build-files.outputs.all_changed_files, 'build-scripts/build-scheduler.sh')
        run: |
          echo "Pushing SCHEDULER_VERSION :${{ env.SCHEDULER_VERSION }}"
          docker push ${{ env.ORG_NAME }}/${{ env.SCHEDULER_NAME }}:${{ env.SCHEDULER_VERSION }}
        env:
          GITHUB_ENV: $GITHUB_ENV       

      #======================================================================================================
      #                                      Key-Manager Build
      #======================================================================================================    
      - name: Build Key-Manager Image
        if: steps.changed-build-files.outputs.any_changed == 'true' && contains(steps.changed-build-files.outputs.all_changed_files, 'build-scripts/build-key-manager.sh')
        run: |
          cd tx-manager/build-scripts
          ./build-key-manager.sh
        env:
          GITHUB_ENV: $GITHUB_ENV         

      - name: Push Key-Manager Image to DockerHub
        if: steps.changed-build-files.outputs.any_changed == 'true' && contains(steps.changed-build-files.outputs.all_changed_files, 'build-scripts/build-key-manager.sh')
        run: |
          echo "Pushing KEY_MANAGER_VERSION :${{ env.KEY_MANAGER_VERSION }}"
          docker push ${{ env.ORG_NAME }}/${{ env.KEY_MANAGER_NAME }}:${{ env.KEY_MANAGER_VERSION }}
        env:
          GITHUB_ENV: $GITHUB_ENV    
          
      #======================================================================================================
      #                                      Executor Build
      #======================================================================================================    
      - name: Build Executor Image
        if: steps.changed-build-files.outputs.any_changed == 'true' && contains(steps.changed-build-files.outputs.all_changed_files, 'build-scripts/build-executor.sh')
        run: |
          cd tx-manager/build-scripts
          ./build-executor.sh
        env:
          GITHUB_ENV: $GITHUB_ENV         

      - name: Push Executor Image to DockerHub
        if: steps.changed-build-files.outputs.any_changed == 'true' && contains(steps.changed-build-files.outputs.all_changed_files, 'build-scripts/build-executor.sh')
        run: |
          echo "Pushing EXECUTOR_VERSION :${{ env.EXECUTOR_VERSION }}"
          docker push ${{ env.ORG_NAME }}/${{ env.EXECUTOR_NAME }}:${{ env.EXECUTOR_VERSION }}
        env:
          GITHUB_ENV: $GITHUB_ENV              